import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeUnit;

import org.json.JSONObject;
import org.json.JSONArray;
import org.json.JSONException;

public class CVEresolver {
    
    private final static String BASE_URL = "http://cve.circl.lu/api/cve/";
    
    public static void main(String args[]) {
    	List<String> cves = new ArrayList<>();
    	BufferedReader reader;
		try {
			reader = new BufferedReader(new FileReader(
					"cve_list.txt"));
			String line = reader.readLine();
			while (line != null) {
				cves.add(line);
				line = reader.readLine();
			}
			reader.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
				
		HashMap<String,String> result = new HashMap<>();
				
		for(String cve: cves) {
	    	try {
	    		URL url = new URL(BASE_URL + cve);
		    	HttpURLConnection con = (HttpURLConnection) url.openConnection();
		    	con.setRequestMethod("GET");
		    	
		    	BufferedReader in = new BufferedReader(
		    			  new InputStreamReader(con.getInputStream()));
		    			String inputLine;
		    			StringBuffer content = new StringBuffer();
		    			while ((inputLine = in.readLine()) != null) {
		    			    content.append(inputLine);
		    			}
		    					    			
		    			JSONObject root = new JSONObject(content.toString());
		    			String name = "not available";
		    			try {
			    			JSONArray capec = root.getJSONArray("capec");
			    			JSONObject bla = capec.getJSONObject(0);
			    			name = bla.getString("name");
		    			}catch(JSONException ex) {
		    				
		    			}
		    			String cvss = "";
		    			try {
		    				cvss = root.getString("cvss");
		    			}catch(JSONException exe) {
		    				cvss = root.getInt("cvss") + "";
		    			}
		    			String id = root.getString("id");
		    			
		    			System.out.println(id+ "," + name + "," + cvss);
		    			result.put(name, cvss);
		    			
		    			in.close();
		    			con.disconnect();
		    			
	    	}catch(Exception e) {
	    		if(e instanceof JSONException) {
	    			System.out.println(cve + ",not available,not available");
	    		}
	    	}
	    	try {
				TimeUnit.SECONDS.sleep(1); //to avoid getting your ip blacklisted by the api provider
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		/*Iterator it = result.entrySet().iterator();
	    while (it.hasNext()) {
	        Map.Entry pair = (Map.Entry)it.next();
	        System.out.println(pair.getKey() + " " + pair.getValue());
	        it.remove(); // avoids a ConcurrentModificationException
	    }*/
    	
    }
}
